EFM ModelEFM{
	component SourcePoint1(
		type = "SourcePoint",
		parameters = (
			efficiency = 100.0,
			retailPrice = 0.0
		)
	);

	component TargetPoint1(
		type = "TargetPoint",
		parameters = (
			efficiency = 100.0,
			retailPrice = 0.0,
			demandedEnergy = de
		)
	);

	component Server6(
		type = "Server",
		parameters = (
			maxPower = mp6,
			efficiency = ef6,
			retailPrice = rp6,
			embeddedEnergy = emb6
		)
	);

	component Router7(
		type = "Router",
		parameters = (
			maxPower = mp7,
			efficiency = ef7,
			retailPrice = rp7,
			embeddedEnergy = emb7
		)
	);

	component Switch8(
		type = "Switch",
		parameters = (
			maxPower = mp8,
			efficiency = ef8,
			retailPrice = rp8,
			embeddedEnergy = emb8
		)
	);

	arc SourcePoint1 -> Server6;
	arc SourcePoint1 -> Router7;
	arc SourcePoint1 -> Switch8;
	arc Server6 -> TargetPoint1;
	arc Router7 -> TargetPoint1;
	arc Switch8 -> TargetPoint1;
	

	metric ic = initialCost( eletricityCost = ec);
	metric oc = operationalCost( eletricityCost = ec, availability = aval, time = period );
	metric ee = embeddedExergy;
	metric oe = operationalExergy( time = period, availability = aval);
	metric tc(ic + oc);
	metric te(ee + oe);
}

t = 100;


RBD ModelRBD{

   block b6( MTTF = mttf6, MTTR = 0.99);
   block b7( MTTF = mttf7, MTTR = 0.52);
   block b8( MTTF = mttf8, MTTR = 0.64);


   series s2(b6, b7, b8);

   top s2;

   metric av = availability;
   metric rel = reliability( time = t );
   metric mttf = mttf;
   metric mttr = mttr;
}


main{

	av = solve(ModelRBD, av);
	rel = solve(ModelRBD, rel);
	mttf = solve(ModelRBD, mttf);
	mttr = solve(ModelRBD, mttr);

	println("Availability: " .. av );
	println("Reliability: " .. rel );
	println("Mean time to failure: " .. mttf );
	println("Mean time to repair: " .. mttr );



	ic = solve(ModelEFM, ic);
	println("Acquisition Cost: " .. ic);
	oc = solve(ModelEFM, oc);
	println("Operational Cost: " .. oc);
	tc = solve(ModelEFM, tc);
	println("Total Cost: " .. tc);
	
	println("");
	
	ee = solve(ModelEFM, ee);
	println("Embedded Exergy: " .. ee);
	oe = solve(ModelEFM, oe);
	println("Operational Exergy: " .. oe);
	te = solve(ModelEFM, te);
	println("Total Exergy: " .. te);


}